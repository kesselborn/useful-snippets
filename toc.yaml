# table of contents app with totally overdone css.
# Styles for h1, p and a ... set the content via the env var CONTENT
---
apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: toc
  name: toc
spec:
  replicas: 1
  selector:
    matchLabels:
      app: toc
  template:
    metadata:
      labels:
        app: toc
    spec:
      containers:
      - image: alpine
        env:
          - name: CONTENT
            value: |
              <h1>Apps</h1>
              <a target="_blank" href="/statusapp/200">statusapp (status code 200)</a>
              <a target="_blank" href="/statusapp/418">statusapp (status code 418)</a>
              <hr/>
              <a target="_blank" href="/latencyapp/001.100">latencyapp (latency == 1.1 seconds)</a>
              <a target="_blank" href="/latencyapp/012.345">latencyapp (latency == 12.345 seconds)</a>
              <hr/>
              <a target="_blank" href="/bytesapp/4096">byteapp (return a body with 4096 byte size)</a>
              <a target="_blank" href="/bytesapp/42">byteapp (return a body with 42 byte size)</a>
        name: toc
        command:
          - sh
          - -c
          - |
            cat<<EOF>/tmp/index.html
            <html>
            <head>
            <style>
            body { display: grid; justify-items: center; margin: 0; padding: 4em; background: #2c3e50; font-family: sans-serif; font-size: 16px; }
            h1 { color: #f1c40f; font-size: 3rem; text-transform: uppercase; width: 100%; text-align: center; }
            a { text-align: center; box-sizing: border-box; appearance: none; background-color: transparent; border: 2px solid #e74c3c; border-radius: 0.6em; color: #e74c3c; cursor: pointer; align-self: center; font-size: 1rem; font-weight: 400; line-height: 1; margin: 10px; padding: 1.2em 2.8em; text-decoration: none; text-align: center; text-transform: uppercase; font-family: sans-serif; font-weight: 700; border-color: #f1c40f; color: #fff; background-image: linear-gradient(45deg, #f1c40f 50%, transparent 50%); background-position: 100%; background-size: 400%; transition: background 300ms ease-in-out; width: 1024px; }
            a:hover, a:focus { color: #fff; outline: 0; }
            a:hover { background-position: 0; }
            p { color: #f1c40f; font-size: 1.2rem; width: 100%; padding: 20px; text-align: center; }
            @media screen and (max-width: 1200px) { h1 { font-size: 3rem; } a { width: 800px; } }
            @media screen and (max-width: 800px) { h1 { font-size: 3rem; } a { width: 600px; } }
            @media screen and (max-width: 480px) { h1 { font-size: 3rem; } a { width: 400px; } }
            </style>
            </head>
            <body>
            ${CONTENT}
            </body>
            </html>
            EOF

            cat<<\EOF>/tmp/websphere
            #!/bin/sh
            length=$(cat /tmp/index.html|wc -c)
            echo -e "HTTP/1.1 200 OK \nContent-Length: ${length}\n\n$(cat /tmp/index.html)"
            EOF
            chmod +x /tmp/websphere

            nc -lk -s 0.0.0.0 -p 80 -e "/tmp/websphere"

        ports:
          - name: web
            containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: toc
  name: toc
spec:
  ports:
  - name: web
    port: 80
    protocol: TCP
    targetPort: web
  selector:
    app: toc
  type: ClusterIP
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: toc
spec:
  rules:
  - host: localhost
    http:
      paths:
      - path: /
        backend:
          serviceName: toc
          servicePort: 80
